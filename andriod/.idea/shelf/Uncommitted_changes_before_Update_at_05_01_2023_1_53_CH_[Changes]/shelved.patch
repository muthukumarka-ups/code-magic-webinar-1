Index: app/src/main/java/com/example/tiktokcloneproject/activity/ProfileActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.tiktokcloneproject.activity;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.FragmentActivity;\r\nimport androidx.recyclerview.widget.GridLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.app.Dialog;\r\nimport android.content.ClipData;\r\nimport android.content.ClipboardManager;\r\nimport android.content.ContentValues;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.graphics.Color;\r\nimport android.graphics.Rect;\r\nimport android.graphics.drawable.ColorDrawable;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.Gravity;\r\nimport android.view.ViewGroup;\r\nimport android.view.Window;\r\nimport android.view.inputmethod.InputMethodManager;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.TextView;\r\nimport android.view.View;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.tiktokcloneproject.R;\r\nimport com.example.tiktokcloneproject.adapters.VideoSummaryAdapter;\r\nimport com.example.tiktokcloneproject.helper.StaticVariable;\r\nimport com.example.tiktokcloneproject.model.Notification;\r\nimport com.example.tiktokcloneproject.model.VideoSummary;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignIn;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInClient;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInOptions;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FieldValue;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\n\r\npublic class ProfileActivity extends FragmentActivity implements View.OnClickListener{\r\n    final String USERNAME_LABEL = \"username\";\r\n    private TextView txvFollowing, txvFollowers, txvLikes, txvUserName;\r\n    private EditText edtBio;\r\n    private Button btn, btnEditProfile, btnUpdateBio, btnCancelUpdateBio;\r\n    private LinearLayout llFollowing, llFollowers;\r\n    ImageView imvAvatarProfile;\r\n    Uri avatarUri;\r\n    FirebaseFirestore db;\r\n    FirebaseAuth mAuth;\r\n    FirebaseUser user;\r\n    FirebaseStorage storage;\r\n    StorageReference storageReference;\r\n    Bitmap bitmap;\r\n    String userId;\r\n    DocumentReference docRef;\r\n    String oldBioText, currentUserID;\r\n    String TAG=\"test\";\r\n    RecyclerView recVideoSummary;\r\n    ArrayList<VideoSummary> videoSummaries;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n//        overridePendingTransition(R.anim.slide_in_bottom, R.anim.slide_out_bottom);\r\n        setContentView(R.layout.activity_profile);\r\n        Intent intent = getIntent();\r\n        mAuth = FirebaseAuth.getInstance();\r\n        user = mAuth.getCurrentUser();\r\n        if (intent.getExtras() != null) {\r\n            if (intent.hasExtra(\"id\")) {\r\n                userId = intent.getStringExtra(\"id\");\r\n            } else {\r\n                String action = intent.getAction();\r\n                Uri data = intent.getData();\r\n                List<String> segmentsList = data.getPathSegments();\r\n                userId = segmentsList.get(segmentsList.size() - 1);\r\n            }\r\n        } else {\r\n            userId =  user.getUid();\r\n\r\n        }\r\n        setContentView(R.layout.activity_profile);\r\n        txvFollowing = (TextView)findViewById(R.id.text_following);\r\n        txvFollowers = (TextView)findViewById(R.id.text_followers);\r\n        txvLikes = (TextView)findViewById(R.id.text_likes);\r\n        txvUserName = (TextView)findViewById(R.id.txv_username);\r\n        edtBio = (EditText)findViewById(R.id.edt_bio);\r\n        btnEditProfile =(Button)findViewById(R.id.button_edit_profile);\r\n        imvAvatarProfile = (ImageView) findViewById(R.id.imvAvatarProfile);\r\n        llFollowers = (LinearLayout) findViewById(R.id.ll_followers);\r\n        llFollowing = (LinearLayout) findViewById(R.id.ll_following);\r\n        recVideoSummary = (RecyclerView)findViewById(R.id.recycle_view_video_summary);\r\n        btnUpdateBio = (Button) findViewById(R.id.btn_update_bio);\r\n        btnCancelUpdateBio = (Button) findViewById(R.id.btn_cancel_update_bio);\r\n\r\n        btnUpdateBio.setOnClickListener(this);\r\n        btnCancelUpdateBio.setOnClickListener(this);\r\n        llFollowers.setOnClickListener(this);\r\n        llFollowing.setOnClickListener(this);\r\n//        avatarUri = getIntent().getParcelableExtra(\"uri\");\r\n\r\n        imvAvatarProfile.setImageURI(avatarUri);\r\n\r\n        storage = FirebaseStorage.getInstance();\r\n        storageReference = storage.getReference();\r\n        //set nút follow/edit profile\r\n        if (user==null)\r\n        {//chưa đăng nhập (vào profile thông qua search)\r\n            handleFollow();\r\n        }\r\n        else\r\n        {\r\n            currentUserID=user.getUid();\r\n            if (userId.equals(user.getUid()))\r\n            {\r\n\r\n                //vào profile của mình\r\n                btn = (Button)findViewById(R.id.button_edit_profile);\r\n                edtBio.setVisibility(View.VISIBLE);\r\n                btn.setVisibility(View.VISIBLE);\r\n\r\n\r\n\r\n                db  = FirebaseFirestore.getInstance();\r\n                docRef = db.collection(\"profiles\").document(userId);\r\n                docRef.get().addOnCompleteListener(task -> {\r\n                    if (task.isSuccessful()) {\r\n                        DocumentSnapshot document = task.getResult();\r\n                        if (document.exists()) {\r\n                            txvFollowing.setText(((Long)document.get(\"following\")).toString());\r\n                            txvFollowers.setText(((Long)document.get(\"followers\")).toString());\r\n                            txvLikes.setText(((Long)document.get(\"likes\")).toString());\r\n                            txvUserName.setText(\"@\" + document.getString(USERNAME_LABEL));\r\n                            Log.d(\"name123\",\"vao1\");\r\n\r\n                            oldBioText = document.getString(\"bio\");\r\n                            edtBio.setText(oldBioText);\r\n\r\n                        } else { }\r\n                    } else { }\r\n                });\r\n                oldBioText = edtBio.getText().toString();\r\n                edtBio.setOnFocusChangeListener(new View.OnFocusChangeListener() {\r\n                    @Override\r\n                    public void onFocusChange(View view, boolean b) {\r\n                        if (b) {\r\n                            findViewById(R.id.layout_bio).setVisibility(View.VISIBLE);\r\n                        } else {\r\n                            findViewById(R.id.layout_bio).setVisibility(View.GONE);\r\n                        }\r\n                    }\r\n                });\r\n                btnEditProfile.setOnClickListener(this);\r\n            }\r\n            else\r\n            {//vào profile người khác\r\n                handleFollow();\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        videoSummaries = new ArrayList<VideoSummary>();\r\n        GridLayoutManager gridLayoutManager = new GridLayoutManager(this, 3);\r\n        recVideoSummary.setLayoutManager(gridLayoutManager);\r\n        recVideoSummary.addItemDecoration(new GridSpacingItemDecoration(3, 10, true));\r\n        setVideoSummaries();\r\n    }//on create\r\nboolean isFollowed = false;\r\n    private void handleFollow() {\r\n        //bio cần set lại là text vỉew\r\n        btn = (Button)findViewById(R.id.button_follow);\r\n        btn.setVisibility(View.VISIBLE);\r\n        db  = FirebaseFirestore.getInstance();\r\n        docRef = db.collection(\"profiles\").document(userId);\r\n        docRef.get().addOnCompleteListener(task -> {\r\n            if (task.isSuccessful()) {\r\n                DocumentSnapshot document = task.getResult();\r\n                if (document.exists()) {\r\n\r\n//                    txvFollowing.setText(((Long)document.get(\"following\")).toString());\r\n//                    txvFollowers.setText(((Long)document.get(\"followers\")).toString());\r\n//                    txvLikes.setText(((Long)document.get(\"likes\")).toString());\r\n                    txvUserName.setText(\"@\" + document.getString(USERNAME_LABEL));\r\n\r\n                    Log.d(\"name123\",\"vao2\");\r\n//                        oldBioText = document.getString(\"bio\");\r\n//                        edtBio.setText(oldBioText);\r\n\r\n                } else { }\r\n            } else { }\r\n        });\r\n        if (user !=null)\r\n        {\r\n            DocumentReference docRef = db.collection(\"profiles\").document(currentUserID)\r\n                    .collection(\"following\").document(userId);\r\n            docRef.get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\r\n                @Override\r\n                public void onComplete(Task<DocumentSnapshot> task) {\r\n                    if (task.isSuccessful()) {\r\n                        DocumentSnapshot document = task.getResult();\r\n                        if (document.exists()) {\r\n                            isFollowed = true;\r\n                            Log.d(TAG, \"DocumentSnapshot data: \" + document.getData());\r\n                            handleFollowed();\r\n                            notifyFollow();\r\n\r\n                        } else {\r\n                            Log.d(TAG, \"No such document\");\r\n                            isFollowed = false;\r\n                            handleUnfollowed();\r\n\r\n\r\n                        }\r\n                    } else {\r\n                        Log.d(TAG, \"get failed with \", task.getException());\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n        else\r\n        {\r\n            btn.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View view) {\r\n                    Intent intentMain = new Intent(ProfileActivity.this, MainActivity.class);\r\n                    startActivity(intentMain);\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    public void notifyFollow() {\r\n            db.collection(\"users\").document(user.getUid())\r\n                    .get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\r\n                        @Override\r\n                        public void onComplete(@NonNull Task<DocumentSnapshot> task) {\r\n                            if (task.isSuccessful()) {\r\n                                DocumentSnapshot document = task.getResult();\r\n                                if (document.exists()) {\r\n                                    String username = document.get(\"username\", String.class);\r\n                                    Notification.pushNotification(username, userId, StaticVariable.FOLLOW);\r\n                                    Log.d(ContentValues.TAG, \"DocumentSnapshot data: \" + document.getData());\r\n                                } else {\r\n                                    Log.d(ContentValues.TAG, \"No such document\");\r\n                                }\r\n                            } else {\r\n                                Log.d(ContentValues.TAG, \"get failed with \", task.getException());\r\n                            }\r\n                        }\r\n                    });\r\n        }\r\n\r\n    protected void setVideoSummaries() {\r\n        db.collection(\"profiles\").document(userId).collection(\"public_videos\")\r\n                .get()\r\n                .addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                        if (task.isSuccessful()) {\r\n                            for (QueryDocumentSnapshot document : task.getResult()) {\r\n                                videoSummaries.add(new VideoSummary(document.getString(\"videoId\"),\r\n                                        document.getString(\"thumbnailUri\"),\r\n                                        (Long)document.get(\"watchCount\")));\r\n                            }\r\n                            if (videoSummaries.size() == 0) {\r\n                                return;\r\n                            }\r\n                            VideoSummaryAdapter videoSummaryAdapter =new VideoSummaryAdapter(getApplicationContext(), videoSummaries);\r\n                            recVideoSummary.setAdapter(videoSummaryAdapter);\r\n                        } else {\r\n                            Log.d(\"error\", \"Error getting documents: \", task.getException());\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n\r\n    public class GridSpacingItemDecoration extends RecyclerView.ItemDecoration {\r\n\r\n        private int spanCount;\r\n        private int spacing;\r\n        private boolean includeEdge;\r\n\r\n        public GridSpacingItemDecoration(int spanCount, int spacing, boolean includeEdge) {\r\n            this.spanCount = spanCount;\r\n            this.spacing = spacing;\r\n            this.includeEdge = includeEdge;\r\n        }\r\n\r\n        @Override\r\n        public void getItemOffsets(Rect outRect, View view, RecyclerView parent, RecyclerView.State state) {\r\n            int position = parent.getChildAdapterPosition(view); // item position\r\n            int column = position % spanCount; // item column\r\n\r\n            if (includeEdge) {\r\n                outRect.left = spacing - column * spacing / spanCount; // spacing - column * ((1f / spanCount) * spacing)\r\n                outRect.right = (column + 1) * spacing / spanCount; // (column + 1) * ((1f / spanCount) * spacing)\r\n\r\n                if (position < spanCount) { // top edge\r\n                    outRect.top = spacing;\r\n                }\r\n                outRect.bottom = spacing; // item bottom\r\n            } else {\r\n                outRect.left = column * spacing / spanCount; // column * ((1f / spanCount) * spacing)\r\n                outRect.right = spacing - (column + 1) * spacing / spanCount; // spacing - (column + 1) * ((1f /    spanCount) * spacing)\r\n                if (position >= spanCount) {\r\n                    outRect.top = spacing; // item top\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onPause() {\r\n        super.onPause();\r\n    }\r\n\r\n    void updateBio() {\r\n        docRef.update(\"bio\", edtBio.getText().toString());\r\n        oldBioText = edtBio.getText().toString();\r\n    }\r\n\r\n\r\n    public void onClick(View v) {\r\n        if (v.getId() == R.id.text_menu) {\r\n            showDialog();\r\n            return;\r\n        }\r\n\r\n        if (v.getId() == R.id.imvAvatarProfile) {\r\n//            Bundle bundle = new Bundle();\r\n//            bundle.putString(\"id\", user.getUid());\r\n//            Intent intent = new Intent(ProfileActivity.this, ShareAccountActivity.class);\r\n//            intent.putExtras(bundle);\r\n//            startActivity(intent);\r\n\r\n            showShareAccountDialog();\r\n            return;\r\n        }\r\n        if (v.getId() == R.id.btn_temporary) {\r\n            Intent intent = new Intent(ProfileActivity.this, HomeScreenActivity.class);\r\n            startActivity(intent);\r\n            return;\r\n        }\r\n        if(v.getId() == btnEditProfile.getId()) {\r\n//            Toast.makeText(this, \"YYY\", Toast.LENGTH_SHORT).show();\r\n            moveToAnotherActivity(EditProfileActivity.class);\r\n\r\n        }\r\n        if(v.getId() == R.id.btnBackProfile) {\r\n            finish();\r\n\r\n        }\r\n\r\n        if(v.getId() == btnUpdateBio.getId()) {\r\n            updateBio();\r\n            findViewById(R.id.layout_bio).setVisibility(View.GONE);\r\n            View current = getCurrentFocus();\r\n            InputMethodManager imm = (InputMethodManager)getSystemService(Context.INPUT_METHOD_SERVICE);\r\n            imm.hideSoftInputFromWindow(current.getWindowToken(), 0);\r\n            if (current != null) current.clearFocus();\r\n        }\r\n        if(v.getId() == btnCancelUpdateBio.getId()) {\r\n            edtBio.setText(oldBioText);\r\n            findViewById(R.id.layout_bio).setVisibility(View.GONE);\r\n            View current = getCurrentFocus();\r\n            InputMethodManager imm = (InputMethodManager)getSystemService(Context.INPUT_METHOD_SERVICE);\r\n            imm.hideSoftInputFromWindow(current.getWindowToken(), 0);\r\n            if (current != null) current.clearFocus();\r\n        }\r\n        if (v.getId() == llFollowers.getId()) {\r\n            Intent intent = new Intent(ProfileActivity.this, FollowListActivity.class);\r\n            intent.putExtra(\"pageIndex\", 1);\r\n\r\n            startActivity(intent);\r\n        }\r\n        if (v.getId() == llFollowing.getId()) {\r\n            Intent intent = new Intent(ProfileActivity.this, FollowListActivity.class);\r\n            intent.putExtra(\"pageIndex\", 0);\r\n\r\n            startActivity(intent);\r\n        }\r\n    }\r\n\r\n    private void showShareAccountDialog() {\r\n        final Dialog dialog = new Dialog(this);\r\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);\r\n        dialog.setContentView(R.layout.share_account_layout);\r\n\r\n        TextView txvUsernameInSharedPlace = dialog.findViewById(R.id.txvUsernameInSharedPlace);\r\n        ImageView imvAvatarInSharedPlace = dialog.findViewById(R.id.imvAvatarInSharedPlace);\r\n        Button btnCopyURL = dialog.findViewById(R.id.btnCopyURL);\r\n        TextView txvCancelInSharedPlace = dialog.findViewById(R.id.txvCancelInSharedPlace);\r\n\r\n        imvAvatarInSharedPlace.setImageBitmap(bitmap);\r\n\r\n        txvUsernameInSharedPlace.setText(txvUserName.getText());\r\n\r\n        btnCopyURL.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                ClipboardManager clipboard = (ClipboardManager) getSystemService(Context.CLIPBOARD_SERVICE);\r\n                ClipData clip = ClipData.newPlainText(\"toptop-link\", \"http://toptoptoptop.com/\" + user.getUid().toString());\r\n                clipboard.setPrimaryClip(clip);\r\n                Toast.makeText(ProfileActivity.this, \"Profile link has been saved to clipboard\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n\r\n        imvAvatarInSharedPlace.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent intent = new Intent(ProfileActivity.this, FullScreenAvatarActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n        txvCancelInSharedPlace.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                dialog.cancel();\r\n            }\r\n        });\r\n        dialog.show();\r\n        dialog.getWindow().setLayout(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);\r\n        dialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));\r\n        dialog.getWindow().getAttributes().windowAnimations = R.style.DialogAnimation;\r\n        dialog.getWindow().setGravity(Gravity.BOTTOM);\r\n    }\r\n\r\n    private void showDialog() {\r\n        final Dialog dialog = new Dialog(this);\r\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);\r\n        dialog.setContentView(R.layout.bottom_sheet_layout);\r\n\r\n        LinearLayout llSetting = dialog.findViewById(R.id.llSetting);\r\n        LinearLayout llSignOut = dialog.findViewById(R.id.llSignOut);\r\n\r\n        llSetting.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent intent = new Intent(ProfileActivity.this, SettingsAndPrivacyActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n        llSignOut.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                signOut(view);\r\n\r\n                finish();\r\n            }\r\n        });\r\n\r\n        dialog.show();\r\n        dialog.getWindow().setLayout(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);\r\n        dialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));\r\n        dialog.getWindow().getAttributes().windowAnimations = R.style.DialogAnimation;\r\n        dialog.getWindow().setGravity(Gravity.BOTTOM);\r\n\r\n    }\r\n\r\n    public void signOut (View v)\r\n        {\r\n            FirebaseAuth.getInstance().signOut();\r\n            if(user.getPhoneNumber() == null)\r\n            {\r\n                GoogleSignInOptions gso = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)\r\n                        .requestIdToken(getString(R.string.default_web_client_id))\r\n                        .requestEmail()\r\n                        .build();\r\n\r\n                GoogleSignInClient mGoogleSignInClient = GoogleSignIn.getClient(this, gso);\r\n                mGoogleSignInClient.signOut();\r\n            }\r\n\r\n            Intent intent = new Intent(ProfileActivity.this, HomeScreenActivity.class);\r\n            startActivity(intent);\r\n\r\n            finish();\r\n        }\r\n\r\n    private void moveToAnotherActivity(Class<?> cls) {\r\n        Intent intent = new Intent(ProfileActivity.this, cls);\r\n\r\n        startActivity(intent);\r\n\r\n\r\n    }\r\n\r\n\r\n//    public Integer val;\r\n\r\n//    private int readFollow(String id,String type)\r\n//    {\r\n//\r\n//        DocumentReference docRef = db.collection(\"profiles\").document(id);\r\n//        docRef.get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\r\n//            @Override\r\n//            public void onComplete(@NonNull Task<DocumentSnapshot> task) {\r\n//                if (task.isSuccessful()) {\r\n//                    DocumentSnapshot document = task.getResult();\r\n//                    if (document.exists()) {\r\n//                        //Log.d(TAG, \"DocumentSnapshot data: \" + document.getData());\r\n//                        val= (Integer) document.get(type);\r\n//\r\n//                    } else {\r\n//                        Log.d(TAG, \"No such document\");\r\n//                        val=0;\r\n//                    }\r\n//                } else {\r\n//                    Log.d(TAG, \"get failed with \", task.getException());\r\n//                    val=0;\r\n//                }\r\n//            }\r\n//        });\r\n//\r\n//        return val;\r\n//    }\r\n//\r\n//    private void writeFollow()\r\n//    {\r\n//\r\n//    }\r\n\r\n    private void handleUnfollowed() {\r\n        btn.setText(\"Follow\");\r\n        btn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n\r\n                if(isFollowed) return;\r\n                isFollowed = true;\r\n\r\n                Log.d(TAG, \"follow clicked\");\r\n                Map<String, Object> Data = new HashMap<>();\r\n                Data.put(\"userID\",userId);\r\n                //thêm following\r\n                db.collection(\"profiles\").document(currentUserID)\r\n                        .collection(\"following\").document(userId)\r\n                        .set(Data)\r\n                        .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                            @Override\r\n                            public void onSuccess(Void aVoid) {\r\n                                Log.d(TAG, \"DocumentSnapshot successfully written!\");\r\n                                db.collection(\"profiles\").document(currentUserID)\r\n                                        .update(\"following\", FieldValue.increment(1));\r\n                                docRef = db.collection(\"profiles\").document(userId);\r\n                                docRef.get().addOnCompleteListener(task -> {\r\n                                    if (task.isSuccessful()) {\r\n                                        DocumentSnapshot document = task.getResult();\r\n                                        if (document.exists()) {\r\n\r\n                                            txvFollowing.setText(((Long)document.get(\"following\")).toString());\r\n                                            txvFollowers.setText(((Long)document.get(\"followers\")).toString());\r\n\r\n                                        } else { }\r\n                                    } else { }\r\n                                });\r\n\r\n                                handleFollowed();\r\n                            }\r\n                        })\r\n                        .addOnFailureListener(new OnFailureListener() {\r\n                            @Override\r\n                            public void onFailure(@NonNull Exception e) {\r\n                                Log.w(TAG, \"Error writing document\", e);\r\n                            }\r\n                        });\r\n\r\n                //thêm follower\r\n\r\n                Map<String, Object> Data1 = new HashMap<>();\r\n                Data1.put(\"userID\",currentUserID);\r\n                Log.d(TAG,currentUserID);\r\n                db.collection(\"profiles\").document(userId)\r\n                        .collection(\"followers\").document(currentUserID)\r\n                        .set(Data1)\r\n                        .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                            @Override\r\n                            public void onSuccess(Void aVoid) {\r\n\r\n                                db.collection(\"profiles\").document(userId)\r\n                                        .update(\"followers\", FieldValue.increment(1));\r\n                                Log.d(TAG, \"follower added\");\r\n\r\n                            }\r\n                        })\r\n                        .addOnFailureListener(new OnFailureListener() {\r\n                            @Override\r\n                            public void onFailure(@NonNull Exception e) {\r\n                                Log.w(TAG, \"follower fail\",e);\r\n                            }\r\n                        });\r\n\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    private void handleFollowed() {\r\n        btn.setText(\"Unfollow\");\r\n\r\n        btn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                if(!isFollowed) return;\r\n                isFollowed = false;\r\n                Log.d(TAG, \"unfollow clicked\");\r\n\r\n\r\n\r\n                //xóa following\r\n                db.collection(\"profiles\").document(currentUserID)\r\n                        .collection(\"following\").document(userId)\r\n                        .delete()\r\n                        .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                            @Override\r\n                            public void onSuccess(Void aVoid) {\r\n                                Log.d(TAG, \"DocumentSnapshot successfully deleted!\");\r\n                                db.collection(\"profiles\").document(currentUserID)\r\n                                        .update(\"following\", FieldValue.increment(-1));\r\n\r\n                                docRef = db.collection(\"profiles\").document(userId);\r\n                                docRef.get().addOnCompleteListener(task -> {\r\n                                    if (task.isSuccessful()) {\r\n                                        DocumentSnapshot document = task.getResult();\r\n                                        if (document.exists()) {\r\n\r\n                                txvFollowing.setText(((Long)document.get(\"following\")).toString());\r\n                                txvFollowers.setText(((Long)document.get(\"followers\")).toString());\r\n\r\n                                        } else { }\r\n                                    } else { }\r\n                                });\r\n\r\n\r\n\r\n\r\n                                handleUnfollowed();\r\n                            }\r\n                        })\r\n                        .addOnFailureListener(new OnFailureListener() {\r\n                            @Override\r\n                            public void onFailure(@NonNull Exception e) {\r\n                                Log.w(TAG, \"Error deleting document\", e);\r\n                            }\r\n                        });\r\n\r\n                //xóa follower\r\n                db.collection(\"profiles\").document(userId)\r\n                        .collection(\"followers\").document(currentUserID)\r\n                        .delete()\r\n                        .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                            @Override\r\n                            public void onSuccess(Void aVoid) {\r\n                                db.collection(\"profiles\").document(userId)\r\n                                        .update(\"followers\", FieldValue.increment(-1));\r\n                                Log.d(TAG, \"DocumentSnapshot successfully deleted!\");\r\n                            }\r\n                        })\r\n                        .addOnFailureListener(new OnFailureListener() {\r\n                            @Override\r\n                            public void onFailure(@NonNull Exception e) {\r\n                                Log.w(TAG, \"Error deleting document\", e);\r\n                            }\r\n                        });\r\n\r\n\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        super.onResume();\r\n\r\n        //chinh lai avatar user.getUid().toString()\r\n        StorageReference download = storageReference.child(\"/user_avatars\").child(userId);\r\n\r\n\r\n        download.getBytes(StaticVariable.MAX_BYTES_AVATAR)\r\n                .addOnSuccessListener(new OnSuccessListener<byte[]>() {\r\n                    @Override\r\n                    public void onSuccess(byte[] bytes) {\r\n                        bitmap = BitmapFactory.decodeByteArray(bytes, 0 , bytes.length);\r\n                        imvAvatarProfile.setImageBitmap(bitmap);\r\n                    }\r\n                })\r\n                .addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception e) {\r\n                        // Do nothing\r\n                    }\r\n                });\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/tiktokcloneproject/activity/ProfileActivity.java b/app/src/main/java/com/example/tiktokcloneproject/activity/ProfileActivity.java
--- a/app/src/main/java/com/example/tiktokcloneproject/activity/ProfileActivity.java	(revision 2f57a5fb71144824f46761b80b8d5995d93cfd37)
+++ b/app/src/main/java/com/example/tiktokcloneproject/activity/ProfileActivity.java	(date 1672901379886)
@@ -64,7 +64,7 @@
     private TextView txvFollowing, txvFollowers, txvLikes, txvUserName;
     private EditText edtBio;
     private Button btn, btnEditProfile, btnUpdateBio, btnCancelUpdateBio;
-    private LinearLayout llFollowing, llFollowers;
+    private LinearLayout llFollowing, llFollowers,llInfor;
     ImageView imvAvatarProfile;
     Uri avatarUri;
     FirebaseFirestore db;
@@ -111,6 +111,8 @@
         imvAvatarProfile = (ImageView) findViewById(R.id.imvAvatarProfile);
         llFollowers = (LinearLayout) findViewById(R.id.ll_followers);
         llFollowing = (LinearLayout) findViewById(R.id.ll_following);
+        llInfor= (LinearLayout) findViewById(R.id.info);
+
         recVideoSummary = (RecyclerView)findViewById(R.id.recycle_view_video_summary);
         btnUpdateBio = (Button) findViewById(R.id.btn_update_bio);
         btnCancelUpdateBio = (Button) findViewById(R.id.btn_cancel_update_bio);
@@ -176,6 +178,7 @@
             }
             else
             {//vào profile người khác
+                //llInfor.setVisibility(View.GONE);
                 handleFollow();
 
             }
@@ -395,16 +398,21 @@
             if (current != null) current.clearFocus();
         }
         if (v.getId() == llFollowers.getId()) {
-            Intent intent = new Intent(ProfileActivity.this, FollowListActivity.class);
-            intent.putExtra("pageIndex", 1);
-
-            startActivity(intent);
+            if(currentUserID==userId)
+            {
+                Intent intent = new Intent(ProfileActivity.this, FollowListActivity.class);
+                intent.putExtra("pageIndex", 1);
+                startActivity(intent);
+            }
         }
         if (v.getId() == llFollowing.getId()) {
+
+            if(currentUserID==userId) {
             Intent intent = new Intent(ProfileActivity.this, FollowListActivity.class);
             intent.putExtra("pageIndex", 0);
-
             startActivity(intent);
+            }
+
         }
     }
 
Index: app/src/main/java/com/example/tiktokcloneproject/fragment/FollowersListFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.tiktokcloneproject.fragment;\r\n\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ListView;\r\nimport android.widget.TextView;\r\n\r\nimport com.example.tiktokcloneproject.R;\r\nimport com.example.tiktokcloneproject.adapters.FollowerAdapter;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.firestore.FieldPath;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\n\r\nimport java.util.ArrayList;\r\n\r\n/**\r\n * A simple {@link Fragment} subclass.\r\n * Use the {@link FollowersListFragment#newInstance} factory method to\r\n * create an instance of this fragment.\r\n */\r\npublic class FollowersListFragment extends Fragment {\r\n\r\n    // TODO: Rename parameter arguments, choose names that match\r\n    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER\r\n    private static final String ARG_PARAM1 = \"param1\";\r\n    private static final String ARG_PARAM2 = \"param2\";\r\n\r\n    // TODO: Rename and change types of parameters\r\n    private String mParam1;\r\n    private String mParam2;\r\n\r\n    public FollowersListFragment() {\r\n        // Required empty public constructor\r\n    }\r\n\r\n    /**\r\n     * Use this factory method to create a new instance of\r\n     * this fragment using the provided parameters.\r\n     *\r\n     * @param param1 Parameter 1.\r\n     * @param param2 Parameter 2.\r\n     * @return A new instance of fragment FollowersListFragment.\r\n     */\r\n    // TODO: Rename and change types and number of parameters\r\n    public static FollowersListFragment newInstance(String param1, String param2) {\r\n        FollowersListFragment fragment = new FollowersListFragment();\r\n        Bundle args = new Bundle();\r\n        args.putString(ARG_PARAM1, param1);\r\n        args.putString(ARG_PARAM2, param2);\r\n        fragment.setArguments(args);\r\n        return fragment;\r\n    }\r\n\r\n    TextView tvTest;\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        if (getArguments() != null) {\r\n            mParam1 = getArguments().getString(ARG_PARAM1);\r\n            mParam2 = getArguments().getString(ARG_PARAM2);\r\n        }\r\n\r\n    }\r\n\r\n    ArrayList <String> userIdArrayList=new ArrayList<String>();\r\n    ArrayList <String> userNameArrayList=new ArrayList<String>();\r\n    FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n    ArrayList<String> followerList = new ArrayList<String>();\r\n    ArrayList<String> followerUserNameList = new ArrayList<String>();\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        View contentView = inflater.inflate(R.layout.fragment_followers_list, container, false);\r\n        ListView lvFollowers = (ListView) contentView.findViewById(R.id.lv_followers);\r\n\r\n        //userArrayList.clear();\r\n\r\n        FirebaseAuth mAuth = FirebaseAuth.getInstance();\r\n        FirebaseUser user = mAuth.getCurrentUser();\r\n\r\n        db.collection(\"profiles\").document(user.getUid()).collection(\"followers\").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if (task.isSuccessful()) {\r\n                    for (QueryDocumentSnapshot document : task.getResult()) {\r\n                        followerList.add(document.getId());\r\n//                        Log.d(\"followers\", followerList.toString());\r\n                    }\r\n                    db.collection(\"users\").whereIn(FieldPath.documentId(), followerList).get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n                        @Override\r\n                        public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                            if (task.isSuccessful()){\r\n                                for (QueryDocumentSnapshot document: task.getResult()) {\r\n                                    followerUserNameList.add(document.get(\"username\", String.class));\r\n                                    Log.d(\"followers\", followerUserNameList.toString());\r\n                                }\r\n                                showList(contentView, lvFollowers);\r\n\r\n                            }\r\n                        }\r\n                    });\r\n                } else {\r\n                    Log.d(\"followers\", \"Error getting documents: \", task.getException());\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n//        ArrayAdapter<String> adapter = new ArrayAdapter<String>(contentView.getContext(),\r\n//                android.R.layout.simple_list_item_1,\r\n//                userArrayList);\r\n//\r\n//        lvFollowers.setAdapter(adapter);\r\n\r\n        return contentView;\r\n    }\r\n\r\n    String userName = \"\";\r\n    public void getUserNameById(ArrayList<String> userIdList){\r\n    }\r\n\r\n    void showList(View contentView, ListView lvFollowers) {\r\n//        ArrayAdapter<String> adapter = new ArrayAdapter<String>(contentView.getContext(),\r\n//                android.R.layout.simple_list_item_1,\r\n//                followerUserNameList);\r\n        FollowerAdapter followerAdapter = new FollowerAdapter(contentView.getContext(), followerList, followerUserNameList);\r\n        lvFollowers.setAdapter(followerAdapter);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/tiktokcloneproject/fragment/FollowersListFragment.java b/app/src/main/java/com/example/tiktokcloneproject/fragment/FollowersListFragment.java
--- a/app/src/main/java/com/example/tiktokcloneproject/fragment/FollowersListFragment.java	(revision 2f57a5fb71144824f46761b80b8d5995d93cfd37)
+++ b/app/src/main/java/com/example/tiktokcloneproject/fragment/FollowersListFragment.java	(date 1672900968385)
@@ -93,14 +93,23 @@
         FirebaseAuth mAuth = FirebaseAuth.getInstance();
         FirebaseUser user = mAuth.getCurrentUser();
 
+
+
+
+
         db.collection("profiles").document(user.getUid()).collection("followers").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {
             @Override
             public void onComplete(@NonNull Task<QuerySnapshot> task) {
                 if (task.isSuccessful()) {
                     for (QueryDocumentSnapshot document : task.getResult()) {
-                        followerList.add(document.getId());
+                        if (document.getId().equals("dump"))
+                        {}
+                        else {
+                            followerList.add(document.getId());
+                        }
 //                        Log.d("followers", followerList.toString());
                     }
+                    if (!followerList.isEmpty())
                     db.collection("users").whereIn(FieldPath.documentId(), followerList).get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {
                         @Override
                         public void onComplete(@NonNull Task<QuerySnapshot> task) {
Index: app/src/main/java/com/example/tiktokcloneproject/fragment/FollowingListFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.tiktokcloneproject.fragment;\r\n\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.ListView;\r\n\r\nimport com.example.tiktokcloneproject.R;\r\nimport com.example.tiktokcloneproject.adapters.FollowerAdapter;\r\nimport com.example.tiktokcloneproject.adapters.FollowingAdapter;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.firestore.FieldPath;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\n\r\nimport java.util.ArrayList;\r\n\r\n/**\r\n * A simple {@link Fragment} subclass.\r\n * Use the {@link FollowingListFragment#newInstance} factory method to\r\n * create an instance of this fragment.\r\n */\r\npublic class FollowingListFragment extends Fragment {\r\n\r\n    // TODO: Rename parameter arguments, choose names that match\r\n    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER\r\n    private static final String ARG_PARAM1 = \"param1\";\r\n    private static final String ARG_PARAM2 = \"param2\";\r\n\r\n    // TODO: Rename and change types of parameters\r\n    private String mParam1;\r\n    private String mParam2;\r\n\r\n    public FollowingListFragment() {\r\n        // Required empty public constructor\r\n    }\r\n\r\n    /**\r\n     * Use this factory method to create a new instance of\r\n     * this fragment using the provided parameters.\r\n     *\r\n     * @param param1 Parameter 1.\r\n     * @param param2 Parameter 2.\r\n     * @return A new instance of fragment FollowingListFragment.\r\n     */\r\n    // TODO: Rename and change types and number of parameters\r\n    public static FollowingListFragment newInstance(String param1, String param2) {\r\n        FollowingListFragment fragment = new FollowingListFragment();\r\n        Bundle args = new Bundle();\r\n        args.putString(ARG_PARAM1, param1);\r\n        args.putString(ARG_PARAM2, param2);\r\n        fragment.setArguments(args);\r\n        return fragment;\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        if (getArguments() != null) {\r\n            mParam1 = getArguments().getString(ARG_PARAM1);\r\n            mParam2 = getArguments().getString(ARG_PARAM2);\r\n        }\r\n    }\r\n\r\n    ArrayList <String> userIdArrayList=new ArrayList<String>();\r\n    ArrayList <String> userNameArrayList=new ArrayList<String>();\r\n    FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n    ArrayList<String> followingList = new ArrayList<String>();\r\n    ArrayList<String> followingUserNameList = new ArrayList<String>();\r\n\r\n\r\n\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        ArrayList <String> test=new ArrayList<String>();\r\n\r\n        //get mang ve\r\n        test.add(\"abc\");\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        View contentView = inflater.inflate(R.layout.fragment_following_list, container, false);\r\n        ListView lvFollowing= (ListView) contentView.findViewById(R.id.lv_following);\r\n\r\n\r\n\r\n        FirebaseAuth mAuth = FirebaseAuth.getInstance();\r\n        FirebaseUser user = mAuth.getCurrentUser();\r\n\r\n        db.collection(\"profiles\").document(user.getUid()).collection(\"following\").get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                if (task.isSuccessful()) {\r\n                    for (QueryDocumentSnapshot document : task.getResult()) {\r\n                        followingList.add(document.getId());\r\n//                        Log.d(\"followers\", followerList.toString());\r\n                    }\r\n                    db.collection(\"users\").whereIn(FieldPath.documentId(), followingList).get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n                        @Override\r\n                        public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                            if (task.isSuccessful()){\r\n                                for (QueryDocumentSnapshot document: task.getResult()) {\r\n                                    followingUserNameList.add(document.get(\"username\", String.class));\r\n                                    Log.d(\"followers\", followingUserNameList.toString());\r\n                                }\r\n                                //lvFollowing.setAdapter(new ArrayAdapter<>(contentView.getContext(), android.R.layout.simple_list_item_1,followingUserNameList));\r\n                                showList(contentView, lvFollowing);\r\n\r\n                            }\r\n                        }\r\n                    });\r\n                } else {\r\n                    String[] message = {\"Không tìm thấy\"};\r\n                    lvFollowing.setAdapter(new ArrayAdapter<>(contentView.getContext(), android.R.layout.simple_list_item_1,message));\r\n                    Log.d(\"following\", \"Error getting documents: \", task.getException());\r\n                }\r\n            }\r\n        });\r\n\r\n        return contentView;\r\n\r\n    }\r\n\r\n    void showList(View contentView, ListView lvFollowers) {\r\n//        ArrayAdapter<String> adapter = new ArrayAdapter<String>(contentView.getContext(),\r\n//                android.R.layout.simple_list_item_1,\r\n//                followerUserNameList);\r\n        FollowingAdapter followingAdapter = new FollowingAdapter(contentView.getContext(), followingList, followingUserNameList);\r\n        lvFollowers.setAdapter(followingAdapter);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/tiktokcloneproject/fragment/FollowingListFragment.java b/app/src/main/java/com/example/tiktokcloneproject/fragment/FollowingListFragment.java
--- a/app/src/main/java/com/example/tiktokcloneproject/fragment/FollowingListFragment.java	(revision 2f57a5fb71144824f46761b80b8d5995d93cfd37)
+++ b/app/src/main/java/com/example/tiktokcloneproject/fragment/FollowingListFragment.java	(date 1672900968398)
@@ -111,9 +111,14 @@
             public void onComplete(@NonNull Task<QuerySnapshot> task) {
                 if (task.isSuccessful()) {
                     for (QueryDocumentSnapshot document : task.getResult()) {
-                        followingList.add(document.getId());
+                        if (document.getId().equals("dump"))
+                        {}
+                        else {
+                            followingList.add(document.getId());
+                        }
 //                        Log.d("followers", followerList.toString());
                     }
+                    if (!followingList.isEmpty())
                     db.collection("users").whereIn(FieldPath.documentId(), followingList).get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {
                         @Override
                         public void onComplete(@NonNull Task<QuerySnapshot> task) {
@@ -128,6 +133,10 @@
                             }
                         }
                     });
+
+
+
+
                 } else {
                     String[] message = {"Không tìm thấy"};
                     lvFollowing.setAdapter(new ArrayAdapter<>(contentView.getContext(), android.R.layout.simple_list_item_1,message));
